<?php

namespace App\Listeners;

use App\Events\OpportunityCreated;
use App\TuChance\Models\User;
use App\Notifications\NewOpportunityCreated;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Contracts\Queue\ShouldQueue;

class SendNewOpportunityNotification
{
    /**
     * User model
     * @var \App\TuChance\Models\User
     */
    protected $users;

    /**
     * Create a new listener instance
     * @param  \App\TuChance\Models\User $users
     * @return void
     */
    public function __construct(User $users)
    {
        $this->users = $users;
    }

    /**
     * Handle the event.
     * @param  OpportunityCreated  $event
     * @return void
     */
    public function handle(OpportunityCreated $event)
    {
        $opportunity = $event->getOpportunity();

        $user =$this->users
            ->whereHas('tags', function ($query) use ($opportunity) {
                $tag_ids = $opportunity->tags->pluck('id')->toArray();
                $query->whereIn('interests.id', $tag_ids);
            })
            ->each(function ($user) {
                $user->notify(new NewOpportunityCreated($opportunity));
            });
    }
}

